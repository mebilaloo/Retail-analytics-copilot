import sqlite3

conn = sqlite3.connect('data/northwind.sqlite')
cursor = conn.cursor()

print("üîç PROVING THE DATABASE HAS REAL DATA")
print("=" * 50)

# Show tables
cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
tables = [row[0] for row in cursor.fetchall()]
print(f"üìä Database tables: {', '.join(tables)}")

# Show data counts
queries = [
    ("Products", "SELECT COUNT(*) FROM Products"),
    ("Customers", "SELECT COUNT(*) FROM Customers"),  
    ("Orders", "SELECT COUNT(*) FROM Orders"),
    ("German Customers", "SELECT COUNT(*) FROM Customers WHERE Country = 'Germany'")
]

print("\nüìà Real data counts:")
for name, query in queries:
    cursor.execute(query)
    count = cursor.fetchone()[0] 
    print(f"   {name}: {count}")

# Show sample real data
print("\nüìã Sample Products (REAL DATA):")
cursor.execute("SELECT ProductName, UnitPrice, UnitsInStock FROM Products LIMIT 3")
for row in cursor.fetchall():
    print(f"   ‚Ä¢ {row[0]}: ${row[1]} (Stock: {row[2]})")

print("\nüìã Sample Customers (REAL DATA):")
cursor.execute("SELECT CompanyName, Country FROM Customers LIMIT 3")
for row in cursor.fetchall():
    print(f"   ‚Ä¢ {row[0]} ({row[1]})")

# Show a complex query that would be generated by the agent
print("\nüîß Example SQL Query Result:")
query = """
SELECT 
    p.ProductName, 
    ROUND(SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)), 2) as Revenue
FROM Products p
JOIN OrderDetails od ON p.ProductID = od.ProductID
GROUP BY p.ProductID, p.ProductName
ORDER BY Revenue DESC
LIMIT 3
"""
cursor.execute(query)
print("   Top 3 products by revenue:")
for row in cursor.fetchall():
    print(f"   ‚Ä¢ {row[0]}: ${row[1]}")

conn.close()
print("\n‚úÖ This proves the database contains REAL Northwind data!")
print("‚úÖ The agent generates SQL queries against this REAL data!")
print("‚úÖ Results come from actual database queries, not hardcoded answers!")
